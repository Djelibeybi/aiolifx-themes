[tool.poetry]
name = "aiolifx-themes"
version = "0.5.8"
description = "Async library that applies color themes to LIFX lights"
authors = ["Avi Miller <me@dje.li>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/Djelibeybi/aiolifx-themes"
documentation = "https://aiolifx-themes.readthedocs.io"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: AsyncIO",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
packages = [
    { include = "aiolifx_themes", from = "src" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Djelibeybi/aiolifx-themes/issues"
"Changelog" = "https://github.com/Djelibeybi/aiolifx-themes/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.12"
aiolifx = "^1.1.0"

# Documentation Dependencies
Sphinx = {version = "^8.0.0", optional = true}
sphinx-rtd-theme = {version = "^3.0.0", optional = true}
myst-parser = {version = "^4.0.0", optional = true}

[tool.poetry.extras]
docs = [
    "myst-parser",
    "sphinx",
    "sphinx-rtd-theme",
]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-cov = "^6.0.0"
pre-commit = "^4.0.0"
pytest-asyncio = "^0.23.0"
async-timeout = "^5.0.0"
black = "^24.4.2"
rich = "^13.7.1"
windows-curses = [{ platform = "windows", version = "^2.3.3" }]

[tool.semantic_release]
branch = "main"
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["src/aiolifx_themes/__init__.py:__version__"]
build_command = "poetry build"

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=aiolifx_themes --cov-report=term-missing:skip-covered"
pythonpath = ["src"]
faulthandler_timeout = 5
log_cli = true

[tool.bandit]
skips = ["B311"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
]

[tool.isort]
profile = "black"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
exclude = [
    'docs/.*',
    'setup.py',
]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "docs.*"
ignore_errors = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
